version: "3.7"

services:
  zookeeper_1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - "./mounts/zookeeper_1/data:/var/lib/zookeeper/data"
      - "./mounts/zookeeper_1/logs:/var/lib/zookeeper/log"
    networks:
      kafka_cluster_network:

  zookeeper_2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 32181:2181
    volumes:
      - "./mounts/zookeeper_2/data:/var/lib/zookeeper/data"
      - "./mounts/zookeeper_2/logs:/var/lib/zookeeper/log"
    networks:
      kafka_cluster_network:

  kafka_1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper_1
      - zookeeper_2
    container_name: kafka_1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_1:2181,zookeeper_2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 29092:29092
    volumes:
      - "./mounts/kafka_1/data:/var/lib/kafka/data"
    networks:
      kafka_cluster_network:

  kafka_2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper_1
      - zookeeper_2
    container_name: kafka_2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_1:2181,zookeeper_2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 39092:39092
    volumes:
      - "./mounts/kafka_2/data:/var/lib/kafka/data"
    networks:
      kafka_cluster_network:

networks:
  kafka_cluster_network:
    driver: bridge
